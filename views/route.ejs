<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <meta http-equiv="x-ua-compatible" content="ie=edge" />
    <title>Route 1</title>


    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.2/css/all.css" />
    <!-- Google Fonts Roboto -->
    <link rel="stylesheet"
        href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700;900&display=swap" />


    <!-- leaflet -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css"
        integrity="sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A=="
        crossorigin="" />
    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"
        integrity="sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA=="
        crossorigin=""></script>
    <!-- bootstrap -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css"
        integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">

    <link rel="stylesheet" href="/main.css">

    <style>
        body {
            margin: 0;
            padding: 0;
        }

        #map {
            width: 100%;
            height: 70vh;
        }
    </style>
</head>

<body>
    <!-- Start your project here-->

    <nav class="navbar d-flex justify-content-center p-3" role="navigation">
        <ul class="d-flex flex-row justify-content-around p-0">
            <li>
                <a href="/profile"><i class="fas fa-home nav-link"></i></a>
            </li>

            <li>
                <a href="/logout"><i class="fas fa-sign-out-alt nav-link"></i></a>
            </li>
        </ul>
    </nav>

    
    <div class="d-flex justify-content-center align-items-center">
        <img src="/img/bus.png" alt="busInbound" class="busIcons" id="inbound">
        <span class="mr-2">Inbound</span>
        
        <img src="/img/bus-outbound.png" alt="busoutbound" class="busIcons" id="outbound">
        <span>Outbound</span>
    </div>
    
    <!-- Pills content -->
    <div class="mt-2">
        <p class="text-center">Click on user icon to check Transpo distance!</p>
    </div>
    <div class="d-flex justify-content-center mt-3">
        <div id="map" class="w-75"></div>
    </div>
    
    <div class="d-flex justify-content-center mt-2 vehicles">
        <a class="btn btn-outline-light btn-lg m-1" href="/subway">Subway</a>
        <a class="btn btn-outline-light btn-lg m-1" href="/commuterRail">Commuter Rail</a>
        <a class="btn btn-outline-light btn-lg m-1" href="/bus">Bus</a>
    </div>

    <!-- Custom scripts -->

    <script>

        // Map initialization 
        // let lat;
        // let lng;


        const map = L.map('map').setView([<%=user.local.coords.lat%>, <%=user.local.coords.lng %>], 14);

        const userIcon = L.icon({
            iconUrl: '/img/user.png',
            iconSize: [40, 40],
            iconAnchor: [20, 20],
        });

        const userMarker = L.marker(
            [<%=user.local.coords.lat %>, <%=user.local.coords.lng %>],
            { icon: userIcon }).addTo(map)


        const userPing = [<%=user.local.coords.lat %>, <%=user.local.coords.lng %>]

        const busInbound = L.icon({
            iconUrl: '/img/bus.png',
            iconSize: [40, 40],
            iconAnchor: [20, 20],
        });

        const busOutbound = L.icon({
            iconUrl: '/img/bus-outbound.png',
            iconSize: [40, 40],
            iconAnchor: [20, 20],
        });


        const tiles = L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {
            attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors, Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>',
            maxZoom: 18,
            id: 'mapbox/streets-v11',
            tileSize: 512,
            zoomOffset: -1,
            accessToken: 'pk.eyJ1IjoibWFydGVjb2RlcyIsImEiOiJja3ZwZG0zeDRlZ3lsMnptbjhiZ3NrbTFtIn0.vXc_RJA_QcE0YbvvDc28tA'
        }).addTo(map);

        let vehicles = []

        let vehiclesPing = []



        function showVehicles(routeid) {
            let distanceMessage = document.getElementById('distanceMessage')

            fetch(`/vehicles/${routeid}`)
                .then(res => res.json())
                .then(data => {

                    for (let i = 0; i < vehicles.length; i++) {
                        map.removeLayer(vehicles[i])
                    }

                    vehicles = []

                    vehiclesPing = []


                    for (let i = 0; i < data.data.length; i++) {
                        if (data.data[i].attributes.direction_id !== 0) {
                            vehicles.push(L.marker([data.data[i].attributes.latitude, data.data[i].attributes.longitude], { icon: busInbound }))
                            vehiclesPing.push(data.data[i].attributes.latitude, data.data[i].attributes.longitude)
                        } else {
                            vehicles.push(L.marker([data.data[i].attributes.latitude, data.data[i].attributes.longitude], { icon: busOutbound }))
                            vehiclesPing.push(data.data[i].attributes.latitude, data.data[i].attributes.longitude)
                        }
                    }

                    let latCounter = 0
                    let lngCounter = 1


                    for (let i = 0; i < data.data.length; i++) {
                        let stopId;
                        if (data.data[i].relationships.stop.data === null) {
                            data.data[0].relationships.stop.data !== null ? stopId = data.data[0].relationships.stop.data.id : stopId = data.data[1].relationships.stop.data.id
                        } else {
                            stopId = data.data[i].relationships.stop.data.id
                        }

                        let transpoDistance = distance(userPing[0], userPing[1], vehiclesPing[latCounter], vehiclesPing[lngCounter], "M")
                        
                        fetch(`/stopsLocation/${stopId}`)
                        .then(res => res.json())
                        .then(data => {
                            vehicles[i].bindPopup(`<p>Transpo is on ${data.data.attributes.name}</p> <p>Your Transpo is ${transpoDistance} miles away</p>`)
                        })
                        .catch(err => {
                            console.log(`error ${err}`)
                        });
                        latCounter += 2
                        lngCounter += 2
                    }


                    let featureGroup = L.featureGroup(vehicles).addTo(map)
                    // map.fitBounds(featureGroup.getBounds())


                    // userMarker.bindPopup(`Your Transpo is ${vehiclesDistance} miles away`)

                })
        }

        

        setInterval(() => {
            showVehicles('<%= routeid %>')
        }, 3000);


        function distance(lat1, lon1, lat2, lon2, unit) {
            if ((lat1 == lat2) && (lon1 == lon2)) {
                return 0;
            }

            else {
                const radlat1 = Math.PI * lat1 / 180;
                const radlat2 = Math.PI * lat2 / 180;
                const theta = lon1 - lon2;
                const radtheta = Math.PI * theta / 180;
                let dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);
                if (dist > 1) {
                    dist = 1;
                }
                dist = Math.acos(dist);
                dist = dist * 180 / Math.PI;
                dist = dist * 60 * 1.1515;
                if (unit == "K") { dist = dist * 1.609344 }
                if (unit == "N") { dist = dist * 0.8684 }
                return Math.round(dist * 10) / 10
            }
        }
    </script>
    <!-- bootstrap -->
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"
        integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN"
        crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"
        integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q"
        crossorigin="anonymous"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"
        integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl"
        crossorigin="anonymous"></script>

</body>

</html>